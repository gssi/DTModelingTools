[% import "kpi-helper.eol"; %]
[% var simpledateformat = new Native("java.text.SimpleDateFormat")("dd-M-yyyy HH:mm:ss"); %]
<html>
<head>
<style>
.container{
width:90%;
max-height:800px;
}
</style>
<!-- Latest compiled and minified CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">

<!-- Optional theme -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap-theme.min.css" integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp" crossorigin="anonymous">

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.min.js"></script>
</head>

<body>
<div class="container">

[%for (room in Kpi.all.subject.asSet().sortBy(r|r.name)) { %]
<div class="panel panel-default">
            <div class="panel-heading">
              <h3 class="panel-title">[%=room.name%]</h3>
            </div>
            <div class="panel-body">
              <div class="row">
 <div class="col-md-12">
	[%for (kpi in Kpi.all.select(k|k.subject==room).name.asSet().sortBy(k|k)) { %]
	  <div class="col-md-6" >
		<canvas id="chart-[%=(room.name.replace("\\s","")).concat(kpi.trim())%]"></canvas>
	  </div>
	[%}%]  
	</div>
	  </div></div></div> 
[%for (kpi in Kpi.all.select(k|k.subject==room).name.asSet().sortBy(k|k)) { %]	
<script>
		/////////////////////kpi [%=kpi%]
 const labels[%=(room.name.replace("\\s","")).concat(kpi.replace("\\s",""))%] = [
    [%for(evald in (KpiModel.all.select(m|m.dimensions.categories.flatten().kpis.flatten().name.contains(kpi)).evaldate).asSet()){%]
	'[%=simpledateformat.format(evald)%]',
	[%}%]
  ];

  const data[%=(room.name.replace("\\s","")).concat(kpi.replace("\\s",""))%] = {
    labels: labels[%=(room.name.replace("\\s","")).concat(kpi.replace("\\s",""))%],
    datasets: [{
      label: '[%=kpi.replace("\\s","")%]',
      backgroundColor: 'rgb(255, 99, 132)',
      borderColor: 'rgb(255, 99, 132)',
      data: [
      [%=Kpi.all.select(k|k.subject==room).select(kp|kp.name=kpi).value.valuetype.collect(v|v.getActualizedValues()).concat(',')%]
      ],
    }]
  };
const config[%=(room.name.replace("\\s","")).concat(kpi.replace("\\s",""))%] = {
    type: 'line',
    data: data[%=(room.name.replace("\\s","")).concat(kpi.replace("\\s",""))%],
    options: {
    [%if(Kpi.all.select(k|k.subject==room).selectOne(kp|kp.name=kpi).value.valuetype.isKindOf(AggregatedRangedValue)){%]
    	scales: {
            yAxes: [{
                ticks: {
                    beginAtZero: true,
                    callback: function(value, index, values) {
                    [%var ranges = Kpi.all.select(k|k.subject==room).selectOne(kp|kp.name=kpi).value.valuetype.ranges.name;%]
						var values = [[%for (r in ranges) { %]
									[%=("'"+r+"'"+",")%]
						[%}%]];
                        return values[value];
                    }
                }
            }]
        }
    [%}%]
    }
  };
    const [%=(room.name.replace("\\s","")).concat(kpi.replace("\\s",""))%] = new Chart(
    document.getElementById('chart-[%=(room.name.replace("\\s","")).concat(kpi.trim())%]'),
    config[%=(room.name.replace("\\s","")).concat(kpi.replace("\\s",""))%]
  );
   ////////////////////////end [%=kpi%]
   </script>

	[%}%]
	

	
[%}%]


</body>
</html>