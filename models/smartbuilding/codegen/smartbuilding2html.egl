<html>

<head>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gauge.js/1.3.7/gauge.min.js"></script>
    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
    <style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    .section {
        height: 100vh;
        width: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        overflow-x: hidden;
    }

    .home-container {
        width: 90%;
        max-width: 1200px;
        margin: 0 auto;
        position: relative;
    }

    .home-container>img {
        width: 100%;
        max-width: 500px;
        display: block;
        margin: 0 auto;
    }

    .all-tooltip {
        position: absolute;
        height: 100%;
        width: 100%;
        /*left: 0;*/
        top: 0;
        max-width: 500px;
        transform: translateX(-50%);
        left: 50%;
    }

    .tooltip-content {
        position: absolute;
        background-color: rgb(255, 255, 255);
        box-shadow: 0px 0px 20px #00000020;
        padding: 30px;
        border-radius: 8px;
        width: 90vw;
        max-width: 600px;
        opacity: 0;
        pointer-events: none;
        /* left: -50%; */
        z-index: 2;
    }

    .tooltip-content .arrow {
        position: absolute;
        width: 10px;
        height: 10px;
        border: 10px solid transparent;
        border-bottom-color: rgb(255, 255, 255);
        top: 0px;
        left: 50%;
        transform: translate(-50%, -100%) rotate(0deg);
    }

    .pin {
        position: absolute;
        content: "";
        top: 50%;
        left: 80%;
        height: 25px;
        width: 25px;
        background-color: black;
        border-radius: 50%;
        cursor: pointer;
    }

    .pin:after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        background-color: rgb(255, 255, 255);
        border-radius: 50%;
        animation: puls-effect 1s ease infinite;
    }

    .home-tooltip .tooltip-content {
        display: flex;
        max-width: 500px !important;
        align-items: stretch;
        justify-content: center;
        padding: 0;
        border: 1px solid gray;
    }

    .home-tooltip .tooltip-content .content {
        width: 100% !important;
        padding: 20px;
    }

    .home-tooltip.active .tooltip-content {
        opacity: 1;
        pointer-events: all;
        display: block;
    }

    /* Custom Style for tooltip-1 */

    .tooltip-1 .pin {
        top: 20%;
        left: 10%;
        height: 15px;
        width: 15px;
        background-color: black;
    }

    .tooltip-1 .tooltip-content {
        display: flex;
        max-width: 500px;
        align-items: stretch;
        justify-content: center;
        padding: 0;

        border: 1px solid gray;
    }

    .tooltip-1.active .tooltip-content {
        display: flex;
    }

    .tooltip-1 .tooltip-content .img {
        width: 50%;
        object-fit: cover;
    }

    .tooltip-1 .tooltip-content .content {
        width: 50%;
        padding: 20px;
    }

    .tooltip-1 .tooltip-content .content h1 {
        font-size: 24px;
    }

    .tooltip-1 .tooltip-content .content p {
        font-size: 14px;
    }

    .tooltip-1 .content button {
        font-family: "Montserrat";
        font-size: 18px;
        font-weight: 400;
        border: none;
        outline: none;
        background-color: white;
        color: black;
        padding: 10px;
        cursor: pointer;
        margin-top: 20px;
        border-radius: 4px;
        box-shadow: 0px 0px 20px #00000020;
    }

    /* custom style for tooltip-2 */

    .tooltip-2 .pin {
        top: 80%;
        left: 5%;
        height: 15px;
        width: 15px;
    }

    .tooltip-2 .tooltip-content .content h1 {
        margin: 20px 0;
    }

    .tooltip-content {
        background-color: white;
    }

    .tooltip-2 .tooltip-content button {
        font-family: "Montserrat";
        font-size: 18px;
        font-weight: 400;
        border: none;
        outline: none;
        background-color: white;
        color: black;
        padding: 10px;
        cursor: pointer;
        margin-top: 20px;
        border-radius: 4px;
        box-shadow: 0px 0px 20px #00000020;
    }

    /* Custom style for tooltip-3 */

    .tooltip-3 .pin {
        top: 20%;
        left: 5%;
        height: 15px;
        width: 15px;
    }

    /* Custom style for tooltip-4 */

    .tooltip-4 .pin {
        top: 80%;
        left: 5%;
        height: 15px;
        width: 15px;
    }

    /* Puls Effect For Pins */

    @keyframes puls-effect {
        0% {
            transform: scale(1);
            opacity: 1;
        }

        100% {
            transform: scale(3);
            opacity: 0;
        }
    }

    /* Media Query */

    @media (max-width: 768px) {
        .tooltip-1 .tooltip-content {
            flex-direction: column;
            max-width: 300px;
        }

        .tooltip-1 .tooltip-content .content,
        .tooltip-1 .tooltip-content .img {
            width: 100%;
        }
    }

    .panel-body {
        display: flex;
        flex-direction: column;
    }

    .panel-body canvas {
        width: 100% !important;
        height: auto !important;
    }
    </style>
</head>
<script>
var opts = {
    angle: 0.15, // The span of the gauge arc
    lineWidth: 0.44, // The line thickness
    radiusScale: 1, // Relative radius
    pointer: {
        length: 0.6, // // Relative to gauge radius
        strokeWidth: 0.035, // The thickness
        color: '#000000' // Fill color
    },
    limitMax: false, // If false, max value increases automatically if value > maxValue
    limitMin: false, // If true, the min value of the gauge will be fixed
    colorStart: '#6FADCF', // Colors
    colorStop: '#8FC0DA', // just experiment with them
    strokeColor: '#E0E0E0', // to see which ones work best for you
    generateGradient: true,
    highDpiSupport: true, // High resolution support
};
</script>
<body>

[%var kpis = dimensions.categories.flatten().kpis.flatten();%]

<div class="section">
  <div class="home-container">
  <img src="[%=getImage('office.png')%]" usemap="#image-map" />
 <div class="all-tooltip"> 
      [% var i=1;
      for (subject in kpis.subject.asSet()) { %]
      
      [%if ( kpis.exists(k|k.subject.name==subject.name)) { %]

    <div class="home-tooltip tooltip-[%=i%]">
        <div class="pin"></div>
        <div class="tooltip-content">
          <div class="arrow"></div>
          <div class="content">
          <div class="panel panel-default">
            <div class="panel-heading">
              <h3 class="panel-title">[%=subject.name%]</h3>
            </div>
            <div class="panel-body">
            <div class="row">
            [%for (kpi in kpis.select(k|k.subject.name==subject.name)) { %]
			 <div class="col-sm-6">
			<canvas id="chart-[%=(subject.name.replace("\\s","")).concat(kpi.name.replace("\\s",""))%]" ></canvas>
			<label><b>[%=kpi.name%]</b></label>
			<span id="gauge-value[%=kpi.name.trim()%]">[%=kpi.value.valuetype.actualizedvalue%] [[%=kpi.unit%]]</span>
			</div>
			<script>
			var target[%=(subject.name.replace("\\s","")).concat(kpi.name.replace("\\s",""))%] = document.getElementById('chart-[%=(subject.name.replace("\\s","")).concat(kpi.name.replace("\\s",""))%]'); // your canvas element
			var gauge[%=(subject.name.replace("\\s","")).concat(kpi.name.replace("\\s",""))%] = new Gauge(target[%=(subject.name.replace("\\s","")).concat(kpi.name.replace("\\s",""))%]).setOptions(opts); // create sexy gauge!
			[%if(not kpi.value.valuetype.isKindOf(AggregatedRangedValue)){%]gauge[%=(subject.name.replace("\\s","")).concat(kpi.name.replace("\\s",""))%].maxValue = [%=kpi.value.valuetype.max%]; // set max gauge value 
			gauge[%=(subject.name.replace("\\s","")).concat(kpi.name.replace("\\s",""))%].setMinValue([%=kpi.value.valuetype.min%]);  // Prefer setter over gauge.minValue = 0; [%}%]
			gauge[%=(subject.name.replace("\\s","")).concat(kpi.name.replace("\\s",""))%].animationSpeed = 32; // set animation speed (32 is default value)
			gauge[%=(subject.name.replace("\\s","")).concat(kpi.name.replace("\\s",""))%].set([%=kpi.value.valuetype.actualizedvalue%]); // set actual value
			//gauge[%=(subject.name.replace("\\s","")).concat(kpi.name.replace("\\s",""))%].setTextField('[%=kpi.value.valuetype.actualizedvalue%] [[%=kpi.unit%]]');
			</script>
			
			[%}%]
			</div>
          </div>
        </div>
      </div>
      </div></div>
      [%}
      i++;
      }%]
      
 
    </div>
  </div>
  </div>
</section>

<!-- *******************   -->
<!--  !!!!!!!!!!!!!!!!!!!!!!!!!!! -->
<!--  This Code is for only the floating card in right bottom corner -->
<!-- ********************  -->

<div id="webCifar-sidebox">
  <div id="webCifar">
    <h2 class="logo">Web Cifar</h2>
    <p class="author">Coded By <span>Shaif Arfan</span> </p>
    <div class="items">
      <a href="https://www.youtube.com/channel/UCdxaLo9ALJgXgOUDURRPGiQ" target="_blank" class="item youtubeLink">
        <svg title="watch how we made this" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
          <path d="M10 12a2 2 0 100-4 2 2 0 000 4z" />
          <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd" />
        </svg>
        <p>Watch how we made this.
        </p>
      </a>
      <a href="https://webcifar.com" target="_blank" class="item">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9" />
        </svg>
        <p>https://webcifar.com</p>
      </a>

    </div>
    <div class="close">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
      </svg>
    </div>
  </div>
  <div id="webCifar-icon">
    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
    </svg>
    <p>Info About</p>
  </div>
</div>
<script>
  const tooltips = document.querySelectorAll(".all-tooltip .home-tooltip");
    const fullDiv = document.querySelector(".section");
    const container = document.querySelector(".home-container");
    let timeoutId;
    window.addEventListener("resize", contentPosition);
    window.addEventListener("DOMContentLoaded", contentPosition);

    function contentPosition() {
        tooltips.forEach((tooltip) => {
            const pin = tooltip.querySelector(".pin");
            const content = tooltip.querySelector(".tooltip-content");
            const arrow = tooltip.querySelector(".arrow");
            const pinLeft = pin.offsetLeft;
            if (pinLeft + content.offsetWidth / 2 > fullDiv.offsetWidth) {
                const extraLeft =
                    fullDiv.offsetWidth - (pinLeft + content.offsetWidth / 2);
                // console.log('right-conflict', tooltip)
                content.style.left =
                    pinLeft - content.offsetWidth / 2 + extraLeft - 30 + "px";
                content.style.top = pin.offsetTop + 30 + "px";
            } else if (
                pin.offsetLeft + container.offsetLeft <
                content.offsetWidth / 2
            ) {
                // console.log('left conflict', pin.offsetLeft)
                content.style.left = -container.offsetLeft + "px";
                content.style.top = pin.offsetTop + 30 + "px";
            } else {
                content.style.left = pinLeft - content.offsetWidth / 2 + "px";
                content.style.top = pin.offsetTop + 30 + "px";
            }
            arrow.style.left =
                pinLeft - content.offsetLeft + pin.offsetWidth / 2 + "px";
        });
    }
    tooltips.forEach((tooltip) => {
        const pin = tooltip.querySelector(".pin");
        const content = tooltip.querySelector(".tooltip-content");
        pin.addEventListener("mouseover", () => {
            tooltip.classList.add("active");
        });
        pin.addEventListener("mouseleave", () => {
            timeoutId = setTimeout(() => {
                if (!tooltip.classList.contains("content-hover")) {
                    tooltip.classList.remove("active");
                }
            }, 2000);
        });
        content.addEventListener("mouseover", () => {
            clearTimeout(timeoutId);
            tooltip.classList.add("active");
            tooltip.classList.add("content-hover");
        });
        content.addEventListener("mouseleave", () => {
            timeoutId = setTimeout(() => {
                tooltip.classList.remove("active");
                tooltip.classList.remove("content-hover");
            }, 2000);
        });
    });
</script>

</body>
</html>